name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: "3.11"

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Install uv
        run: pip install uv

      - name: Sync dependencies
        run: uv sync

      - name: Install PyInstaller (dev)
        run: uv run pip install pyinstaller

      - name: Build single file binary
        run: |
          uv run pyinstaller --noconfirm --onefile --windowed --name Text2Gcode src/main.py
        shell: bash

      - name: Rename artifact
        run: |
          mkdir packaged
          if [ "${{ runner.os }}" = "Windows" ]; then
            mv dist/Text2Gcode.exe packaged/Text2Gcode-windows-x64.exe
          else
            mv dist/Text2Gcode packaged/Text2Gcode-linux-x64
            chmod +x packaged/Text2Gcode-linux-x64
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binary
          path: packaged/*

  release:
    name: Create / Update Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4

      - name: Collect binaries
        run: |
          ls -R
          mv windows-latest-binary/Text2Gcode-windows-x64.exe . || true
          mv ubuntu-latest-binary/Text2Gcode-linux-x64 . || true
          ls -l

      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Text2Gcode ${{ github.ref_name }}
          body: |
            A lightweight tool to convert text into plotter / CNC friendly G-code with a live Qt preview.
            
            Automated release build for tag ${{ github.ref_name }}.

            Includes:
            - Windows x64 Single File (.exe)
            - Linux x64 Single File

          artifacts: "Text2Gcode-windows-x64.exe,Text2Gcode-linux-x64"
          allowUpdates: true
          artifactErrorsFailBuild: true
          generateReleaseNotes: true
